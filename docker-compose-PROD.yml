version: '3.9'

services:
  db:
    image: postgres:13-alpine
    restart: always
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}
  
  app:
    build:
      context: .
    restart: always
    command: >
      sh -c "python manage.py wait_for_db &&
             python manage.py collectstatic --noinput &&
             python manage.py makemigrations &&
             python manage.py migrate &&
             gunicorn app.wsgi:application --bind 0.0.0.0:8000
             python manage.py import_instructions --path /init-db-imports/blendinstructions.csv
             python manage.py import_batches --path /init-db-imports/lotnums.csv"
    expose:
      - 8000
    volumes:
      - ./app:/app
      - ./data/web:/vol/web
    environment:
      - SECRET_KEY=${SECRET_KEY} 
      - DEBUG=${DEBUG}
      - DB_HOST=db
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db

  nginx:
    build: ./nginx
    ports:
      - 1337:80
    depends_on:
      - app
  
  redis:
    image: redis:alpine

  celery:
    build: ./project
    command: celery -A core worker -l info
    volumes:
      - ./project/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis
      
  celery-beat:
    build: ./project
    command: celery -A core beat -l info
    volumes:
      - ./project/:/usr/src/app/
    environment:
      - DEBUG=1
      - SECRET_KEY=dbaa1_i7%*3r9-=z-+_mz4r-!qeed@(-a_r(g@k8jo8y3r27%m
      - DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 [::1]
    depends_on:
      - redis