# Generated by Django 3.2.17 on 2023-02-22 13:52

import core.models
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BillOfMaterials',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
                ('foam_factor', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True)),
                ('standard_uom', models.TextField(blank=True, null=True)),
                ('qtyperbill', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('weightpergal', models.TextField(blank=True, null=True)),
                ('qtyonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('comment_text', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bill_of_materials',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlendThese',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('adjustedrunqty', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('qtyonhand', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('starttime', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('prodline', models.TextField(blank=True, null=True)),
                ('oh_after_run', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('week_calc', models.IntegerField()),
                ('one_wk_short', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('two_wk_short', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('three_wk_short', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('last_count_quantity', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('last_count_date', models.DateField(blank=True, null=True)),
                ('last_txn_code', models.TextField(blank=True, null=True)),
                ('last_txn_date', models.DateField(blank=True, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'blendthese',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BmBillDetail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('billno', models.TextField(blank=True, null=True)),
                ('revision', models.TextField(blank=True, null=True)),
                ('linekey', models.TextField(blank=True, null=True)),
                ('lineseqno', models.TextField(blank=True, null=True)),
                ('componentitemcode', models.TextField(blank=True, null=True)),
                ('componentrevision', models.TextField(blank=True, null=True)),
                ('itemtype', models.TextField(blank=True, null=True)),
                ('componentdesc', models.TextField(blank=True, null=True)),
                ('engineeringdrawingfindno', models.TextField(blank=True, null=True)),
                ('engineeringchangeaddno', models.TextField(blank=True, null=True)),
                ('engineeringchangeadddate', models.DateField(blank=True, null=True)),
                ('engineeringchangedelno', models.TextField(blank=True, null=True)),
                ('engineeringchangedeldate', models.DateField(blank=True, null=True)),
                ('workorderstepno', models.TextField(blank=True, null=True)),
                ('billtype', models.TextField(blank=True, null=True)),
                ('commenttext', models.TextField(blank=True, null=True)),
                ('miscchargeglacctkey', models.TextField(blank=True, null=True)),
                ('setupcharge', models.TextField(blank=True, null=True)),
                ('unitofmeasure', models.TextField(blank=True, null=True)),
                ('quantityperbill', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('standardunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('scrappercent', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('workticketstepno', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bm_billdetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BmBillHeader',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('billno', models.TextField(blank=True, null=True)),
                ('revision', models.TextField(blank=True, null=True)),
                ('billtype', models.TextField(blank=True, null=True)),
                ('drawingno', models.TextField(blank=True, null=True)),
                ('drawingrevision', models.TextField(blank=True, null=True)),
                ('datelastused', models.DateField(blank=True, null=True)),
                ('routingno', models.TextField(blank=True, null=True)),
                ('billhasoptions', models.TextField(blank=True, null=True)),
                ('currentbillrevision', models.TextField(blank=True, null=True)),
                ('optioninteractions', models.TextField(blank=True, null=True)),
                ('optioncategories', models.TextField(blank=True, null=True)),
                ('printcomponentdetail', models.TextField(blank=True, null=True)),
                ('maximumlotsize', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('yieldpercent', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('billdesc1', models.TextField(blank=True, null=True)),
                ('billdesc2', models.TextField(blank=True, null=True)),
                ('datecreated', models.DateField(blank=True, null=True)),
                ('timecreated', models.TextField(blank=True, null=True)),
                ('usercreatedkey', models.TextField(blank=True, null=True)),
                ('dateupdated', models.DateField(blank=True, null=True)),
                ('timeupdated', models.TextField(blank=True, null=True)),
                ('userupdatedkey', models.TextField(blank=True, null=True)),
                ('templateno', models.TextField(blank=True, null=True)),
                ('templaterevisionno', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'bm_billheader',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CiItem',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('itemcode', models.TextField(blank=True, null=True)),
                ('itemtype', models.TextField(blank=True, null=True)),
                ('itemcodedesc', models.TextField(blank=True, null=True)),
                ('extendeddescriptionkey', models.TextField(blank=True, null=True)),
                ('useinar', models.TextField(blank=True, null=True)),
                ('useinso', models.TextField(blank=True, null=True)),
                ('useinpo', models.TextField(blank=True, null=True)),
                ('useinbm', models.TextField(blank=True, null=True)),
                ('calculatecommission', models.TextField(blank=True, null=True)),
                ('dropship', models.TextField(blank=True, null=True)),
                ('ebmenabled', models.TextField(blank=True, null=True)),
                ('pricecode', models.TextField(blank=True, null=True)),
                ('printreceiptlabels', models.TextField(blank=True, null=True)),
                ('allocatelandedcost', models.TextField(blank=True, null=True)),
                ('warrantycode', models.TextField(blank=True, null=True)),
                ('salesunitofmeasure', models.TextField(blank=True, null=True)),
                ('purchaseunitofmeasure', models.TextField(blank=True, null=True)),
                ('standardunitofmeasure', models.TextField(blank=True, null=True)),
                ('posttoglbydivision', models.TextField(blank=True, null=True)),
                ('salesacctkey', models.TextField(blank=True, null=True)),
                ('costofgoodssoldacctkey', models.TextField(blank=True, null=True)),
                ('inventoryacctkey', models.TextField(blank=True, null=True)),
                ('purchaseacctkey', models.TextField(blank=True, null=True)),
                ('manufacturingcostacctkey', models.TextField(blank=True, null=True)),
                ('taxclass', models.TextField(blank=True, null=True)),
                ('purchasestaxclass', models.TextField(blank=True, null=True)),
                ('productline', models.TextField(blank=True, null=True)),
                ('producttype', models.TextField(blank=True, null=True)),
                ('valuation', models.TextField(blank=True, null=True)),
                ('defaultwarehousecode', models.TextField(blank=True, null=True)),
                ('primaryapdivisionno', models.TextField(blank=True, null=True)),
                ('primaryvendorno', models.TextField(blank=True, null=True)),
                ('imagefile', models.TextField(blank=True, null=True)),
                ('category1', models.TextField(blank=True, null=True)),
                ('category2', models.TextField(blank=True, null=True)),
                ('category3', models.TextField(blank=True, null=True)),
                ('category4', models.TextField(blank=True, null=True)),
                ('explodekititems', models.TextField(blank=True, null=True)),
                ('shipweight', models.TextField(blank=True, null=True)),
                ('commenttext', models.TextField(blank=True, null=True)),
                ('restockingmethod', models.TextField(blank=True, null=True)),
                ('standardunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('standardunitprice', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('commissionrate', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('basecommamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('purchaseumconvfctr', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('salesumconvfctr', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('volume', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('restockingcharge', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
                ('datecreated', models.DateField(blank=True, null=True)),
                ('timecreated', models.TextField(blank=True, null=True)),
                ('usercreatedkey', models.TextField(blank=True, null=True)),
                ('dateupdated', models.DateField(blank=True, null=True)),
                ('timeupdated', models.TextField(blank=True, null=True)),
                ('userupdatedkey', models.TextField(blank=True, null=True)),
                ('allowbackorders', models.TextField(blank=True, null=True)),
                ('allowreturns', models.TextField(blank=True, null=True)),
                ('allowtradediscount', models.TextField(blank=True, null=True)),
                ('confirmcostincrinrcptofgoods', models.TextField(blank=True, null=True)),
                ('lastsolddate', models.DateField(blank=True, null=True)),
                ('lastreceiptdate', models.DateField(blank=True, null=True)),
                ('salespromotioncode', models.TextField(blank=True, null=True)),
                ('salestartingdate', models.DateField(blank=True, null=True)),
                ('saleendingdate', models.DateField(blank=True, null=True)),
                ('salemethod', models.TextField(blank=True, null=True)),
                ('nextlotserialno', models.TextField(blank=True, null=True)),
                ('inventorycycle', models.TextField(blank=True, null=True)),
                ('routingno', models.TextField(blank=True, null=True)),
                ('plannercode', models.TextField(blank=True, null=True)),
                ('buyercode', models.TextField(blank=True, null=True)),
                ('lowlevelcode', models.TextField(blank=True, null=True)),
                ('plannedbymrp', models.TextField(blank=True, null=True)),
                ('vendoritemcode', models.TextField(blank=True, null=True)),
                ('setupcharge', models.TextField(blank=True, null=True)),
                ('attachmentfilename', models.TextField(blank=True, null=True)),
                ('itemimagewidthinpixels', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('itemimageheightinpixels', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('lasttotalunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('averageunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('salespromotionprice', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('suggestedretailprice', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('salespromotiondiscountpercent', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('totalquantityonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('averagebackorderfilldays', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('lastallocatedunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('totalinventoryvalue', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('inactiveitem', models.TextField(blank=True, null=True)),
                ('lastphysicalcountdate', models.DateField(blank=True, null=True)),
                ('commoditycode', models.TextField(blank=True, null=True)),
                ('templateno', models.TextField(blank=True, null=True)),
                ('tracklotserialexpirationdates', models.TextField(blank=True, null=True)),
                ('requireexpirationdate', models.TextField(blank=True, null=True)),
                ('calculateexpdatebasedon', models.TextField(blank=True, null=True)),
                ('numberuntilexpiration', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('calculatesellbybasedon', models.TextField(blank=True, null=True)),
                ('numbertosellbybefore', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('numbertosellbyafter', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('calculateusebybasedon', models.TextField(blank=True, null=True)),
                ('numbertousebybefore', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('numbertousebyafter', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('calculatereturnsbasedon', models.TextField(blank=True, null=True)),
                ('numbertoreturnafter', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
            ],
            options={
                'db_table': 'ci_item',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImItemCost',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('itemcode', models.TextField(blank=True, null=True)),
                ('warehousecode', models.TextField(blank=True, null=True)),
                ('tiertype', models.TextField(blank=True, null=True)),
                ('groupsort', models.TextField(blank=True, null=True)),
                ('receiptdate', models.DateField(blank=True, null=True)),
                ('receiptno', models.TextField(blank=True, null=True)),
                ('lotserialno', models.TextField(blank=True, null=True)),
                ('unitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantitycommitted', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('allocatedcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('transactiondate', models.DateField(blank=True, null=True)),
                ('negativeqty', models.TextField(blank=True, null=True)),
                ('tiergroup', models.TextField(blank=True, null=True)),
                ('extendedcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('costcalcqtycommitted', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('costcalccostcommitted', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('datecreated', models.DateField(blank=True, null=True)),
                ('timecreated', models.TextField(blank=True, null=True)),
                ('usercreatedkey', models.TextField(blank=True, null=True)),
                ('dateupdated', models.DateField(blank=True, null=True)),
                ('timeupdated', models.TextField(blank=True, null=True)),
                ('userupdatedkey', models.TextField(blank=True, null=True)),
                ('lotserialexpirationdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'im_itemcost',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImItemTransactionHistory',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('itemcode', models.TextField(blank=True, null=True)),
                ('warehousecode', models.TextField(blank=True, null=True)),
                ('transactiondate', models.DateField(blank=True, null=True)),
                ('transactioncode', models.TextField(blank=True, null=True)),
                ('entryno', models.TextField(blank=True, null=True)),
                ('sequenceno', models.TextField(blank=True, null=True)),
                ('imtransactionentrycomment', models.TextField(blank=True, null=True)),
                ('apdivisionno', models.TextField(blank=True, null=True)),
                ('vendorno', models.TextField(blank=True, null=True)),
                ('ardivisionno', models.TextField(blank=True, null=True)),
                ('customerno', models.TextField(blank=True, null=True)),
                ('referencedate', models.DateField(blank=True, null=True)),
                ('fiscalcalyear', models.TextField(blank=True, null=True)),
                ('fiscalcalperiod', models.TextField(blank=True, null=True)),
                ('shiptocode', models.TextField(blank=True, null=True)),
                ('invoicetype', models.TextField(blank=True, null=True)),
                ('transactionqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('unitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('allocatedcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('unitprice', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('extendedprice', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('extendedcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('extendedstandardcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('dateupdated', models.DateField(blank=True, null=True)),
                ('timeupdated', models.TextField(blank=True, null=True)),
                ('userupdatedkey', models.TextField(blank=True, null=True)),
                ('invoicehistoryheaderseqno', models.TextField(blank=True, null=True)),
                ('receipthistoryheaderseqno', models.TextField(blank=True, null=True)),
                ('receipthistorypurchaseorderno', models.TextField(blank=True, null=True)),
                ('sourcejournal', models.TextField(blank=True, null=True)),
                ('journalnoglbatchno', models.TextField(blank=True, null=True)),
                ('workticketkey', models.TextField(blank=True, null=True)),
                ('workticketno', models.TextField(blank=True, null=True)),
                ('workticketdesc', models.TextField(blank=True, null=True)),
                ('workticketlinekey', models.TextField(blank=True, null=True)),
                ('workticketstepno', models.TextField(blank=True, null=True)),
                ('workticketclasscode', models.TextField(blank=True, null=True)),
                ('activitycode', models.TextField(blank=True, null=True)),
                ('workcenter', models.TextField(blank=True, null=True)),
                ('toolcode', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'im_itemtransactionhistory',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ImItemWarehouse',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('itemcode', models.TextField(blank=True, null=True)),
                ('warehousecode', models.TextField(blank=True, null=True)),
                ('binlocation', models.TextField(blank=True, null=True)),
                ('reordermethod', models.TextField(blank=True, null=True)),
                ('quantityonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityonpurchaseorder', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityonsalesorder', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityonbackorder', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('averagecost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityrequiredforwo', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('economicorderqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('reorderpointqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('minimumorderqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('maximumonhandqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityonworkorder', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityinshipping', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('totalwarehousevalue', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('costcalcqtycommitted', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('costcalccostcommitted', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('datecreated', models.DateField(blank=True, null=True)),
                ('timecreated', models.TextField(blank=True, null=True)),
                ('usercreatedkey', models.TextField(blank=True, null=True)),
                ('dateupdated', models.DateField(blank=True, null=True)),
                ('timeupdated', models.TextField(blank=True, null=True)),
                ('userupdatedkey', models.TextField(blank=True, null=True)),
                ('lastphysicalcountdate', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'im_itemwarehouse',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='IssueSheetNeeded',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('id2', models.DecimalField(blank=True, decimal_places=1, max_digits=50, null=True)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('adjustedrunqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('qtyonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('starttime', models.DecimalField(blank=True, decimal_places=7, max_digits=50, null=True)),
                ('prodline', models.TextField(blank=True, null=True)),
                ('oh_after_run', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('week_calc', models.DecimalField(blank=True, decimal_places=1, max_digits=50, null=True)),
                ('batchnum1', models.TextField(blank=True, null=True)),
                ('batchqty1', models.TextField(blank=True, null=True)),
                ('batchnum2', models.TextField(blank=True, null=True)),
                ('batchqty2', models.TextField(blank=True, null=True)),
                ('batchnum3', models.TextField(blank=True, null=True)),
                ('batchqty3', models.TextField(blank=True, null=True)),
                ('batchnum4', models.TextField(blank=True, null=True)),
                ('batchqty4', models.TextField(blank=True, null=True)),
                ('batchnum5', models.TextField(blank=True, null=True)),
                ('batchqty5', models.TextField(blank=True, null=True)),
                ('batchnum6', models.TextField(blank=True, null=True)),
                ('batchqty6', models.TextField(blank=True, null=True)),
                ('batchnum7', models.TextField(blank=True, null=True)),
                ('batchqty7', models.TextField(blank=True, null=True)),
                ('batchnum8', models.TextField(blank=True, null=True)),
                ('batchqty8', models.TextField(blank=True, null=True)),
                ('batchnum9', models.TextField(blank=True, null=True)),
                ('batchqty9', models.TextField(blank=True, null=True)),
                ('uniqchek', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'issue_sheet_needed',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PoPurchaseOrderDetail',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('purchaseorderno', models.TextField(blank=True, null=True)),
                ('linekey', models.TextField(blank=True, null=True)),
                ('lineseqno', models.TextField(blank=True, null=True)),
                ('itemcode', models.TextField(blank=True, null=True)),
                ('extendeddescriptionkey', models.TextField(blank=True, null=True)),
                ('itemtype', models.TextField(blank=True, null=True)),
                ('itemcodedesc', models.TextField(blank=True, null=True)),
                ('usetax', models.TextField(blank=True, null=True)),
                ('requireddate', models.DateField(blank=True, null=True)),
                ('vendorpricecode', models.TextField(blank=True, null=True)),
                ('purchasesacctkey', models.TextField(blank=True, null=True)),
                ('valuation', models.TextField(blank=True, null=True)),
                ('unitofmeasure', models.TextField(blank=True, null=True)),
                ('warehousecode', models.TextField(blank=True, null=True)),
                ('productline', models.TextField(blank=True, null=True)),
                ('masterlinekey', models.TextField(blank=True, null=True)),
                ('reschedule', models.TextField(blank=True, null=True)),
                ('jobno', models.TextField(blank=True, null=True)),
                ('costcode', models.TextField(blank=True, null=True)),
                ('costtype', models.TextField(blank=True, null=True)),
                ('receiptofgoodsupdated', models.TextField(blank=True, null=True)),
                ('workorderno', models.TextField(blank=True, null=True)),
                ('stepno', models.TextField(blank=True, null=True)),
                ('substepprefix', models.TextField(blank=True, null=True)),
                ('substepsuffix', models.TextField(blank=True, null=True)),
                ('workordertype', models.TextField(blank=True, null=True)),
                ('allocatelandedcost', models.TextField(blank=True, null=True)),
                ('vendoraliasitemno', models.TextField(blank=True, null=True)),
                ('taxclass', models.TextField(blank=True, null=True)),
                ('commenttext', models.TextField(blank=True, null=True)),
                ('assetaccount', models.TextField(blank=True, null=True)),
                ('assettemplate', models.TextField(blank=True, null=True)),
                ('weightreference', models.TextField(blank=True, null=True)),
                ('weight', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityordered', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityreceived', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantitybackordered', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('masteroriginalqty', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('masterqtybalance', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('masterqtyorderedtodate', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('quantityinvoiced', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('unitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('originalunitcost', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('extensionamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('receivedamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('invoicedamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('unitofmeasureconvfactor', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('receivedallocatedamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('invoicedallocatedamt', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('salesorderno', models.TextField(blank=True, null=True)),
                ('customerpono', models.TextField(blank=True, null=True)),
                ('purchaseorderhistorydtlseqno', models.TextField(blank=True, null=True)),
                ('workticketkey', models.TextField(blank=True, null=True)),
                ('workticketsteplinekey', models.TextField(blank=True, null=True)),
                ('workticketlinekey', models.TextField(blank=True, null=True)),
                ('workticketstatus', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'po_purchaseorderdetail',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TimetableRunData',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('id2', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('adjustedrunqty', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('qtyonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('starttime', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('prodline', models.TextField(blank=True, null=True)),
                ('oh_after_run', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('week_calc', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'timetable_run_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UnscheduledProduction',
            fields=[
                ('adjustedrunqty', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('qtyperbill', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('qtyonhand', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('runtime', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('id2', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('unadjusted_runqty', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('foam_factor', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('po_due', models.TextField(blank=True, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
                ('item_code', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'unscheduled_orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UpcomingBlendCount',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('expected_on_hand', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('starttime', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('prodline', models.TextField(blank=True, null=True)),
                ('last_transaction_code', models.TextField(blank=True, null=True)),
                ('last_transaction_date', models.DateField(blank=True, null=True)),
                ('last_count_quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=10, null=True)),
                ('last_count_date', models.DateField(blank=True, null=True)),
                ('procurementtype', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'upcoming_blend_count',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeeklyBlendTotals',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('week_starting', models.DateField(blank=True, null=True)),
                ('blend_quantity', models.DecimalField(decimal_places=5, max_digits=50)),
            ],
            options={
                'db_table': 'weekly_blend_totals',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BlendingStep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_no', models.IntegerField(blank=True, null=True)),
                ('step_desc', models.TextField(blank=True, null=True)),
                ('step_qty', models.TextField(blank=True, null=True)),
                ('step_unit', models.TextField(blank=True, null=True)),
                ('qty_added', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('chem_lot_number', models.TextField(blank=True, null=True)),
                ('notes_1', models.TextField(blank=True, null=True)),
                ('notes_2', models.TextField(blank=True, null=True)),
                ('start_time', models.TimeField(blank=True, null=True)),
                ('end_time', models.TimeField(blank=True, null=True)),
                ('chkd_by', models.TextField(blank=True, null=True)),
                ('mfg_chkd_by', models.TextField(blank=True, null=True)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('ref_no', models.TextField(blank=True, null=True)),
                ('prepared_by', models.TextField(blank=True, null=True)),
                ('prepared_date', models.TextField(blank=True, null=True)),
                ('lbs_per_gal', models.TextField(blank=True, null=True)),
                ('blend_lot_number', models.TextField(blank=True, null=True)),
                ('lot', models.TextField(blank=True, null=True)),
                ('picture_attachment', models.ImageField(blank=True, upload_to=core.models.set_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='BlendInstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('step_no', models.IntegerField(blank=True, null=True)),
                ('step_desc', models.TextField(blank=True, null=True)),
                ('step_qty', models.TextField(blank=True, null=True)),
                ('step_unit', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('notes_1', models.TextField(blank=True, null=True)),
                ('notes_2', models.TextField(blank=True, null=True)),
                ('item_code', models.TextField(blank=True, null=True)),
                ('ref_no', models.TextField(blank=True, null=True)),
                ('prepared_by', models.TextField(blank=True, null=True)),
                ('prepared_date', models.TextField(blank=True, null=True)),
                ('lbs_per_gal', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistSubmissionRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.TextField(blank=True, null=True)),
                ('submission_status', models.BooleanField()),
                ('normal_operator', models.TextField(blank=True, null=True)),
                ('this_operator', models.TextField(blank=True, null=True)),
                ('date_checked', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ChemLocation',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('component_item_description', models.TextField(blank=True, null=True)),
                ('unit', models.TextField(blank=True, null=True)),
                ('storagetype', models.TextField(blank=True, null=True)),
                ('general_location', models.TextField(blank=True, null=True)),
                ('specific_location', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CountRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.TextField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('expected_quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('counted_quantity', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('counted_date', models.DateField(blank=True, null=True)),
                ('variance', models.DecimalField(blank=True, decimal_places=5, max_digits=50, null=True)),
                ('counted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='DeskOneSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('item_code', models.TextField()),
                ('item_description', models.TextField()),
                ('lot', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=50)),
                ('totes_needed', models.DecimalField(decimal_places=5, max_digits=50)),
                ('blend_area', models.TextField()),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='DeskTwoSchedule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveIntegerField(db_index=True, editable=False, verbose_name='order')),
                ('item_code', models.TextField()),
                ('item_description', models.TextField()),
                ('lot', models.TextField()),
                ('quantity', models.DecimalField(decimal_places=5, max_digits=50)),
                ('totes_needed', models.DecimalField(decimal_places=5, max_digits=50)),
                ('blend_area', models.TextField()),
            ],
            options={
                'ordering': ('order',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FoamFactor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.TextField(blank=True, null=True)),
                ('factor', models.DecimalField(decimal_places=2, max_digits=100, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Forklift',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('unit_number', models.TextField(blank=True, null=True, unique=True)),
                ('make', models.TextField(blank=True, null=True)),
                ('dept', models.TextField(blank=True, null=True)),
                ('normal_operator', models.TextField(blank=True, null=True)),
                ('forklift_type', models.TextField(blank=True, null=True)),
                ('model_no', models.TextField(blank=True, null=True)),
                ('serial_no', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='HorixBlendThese',
            fields=[
                ('item_code', models.TextField(blank=True, null=True)),
                ('purchase_order_number', models.TextField(blank=True, null=True)),
                ('product', models.TextField(blank=True, null=True)),
                ('amt', models.TextField(blank=True, null=True)),
                ('component_item_code', models.TextField(blank=True, null=True)),
                ('dye', models.TextField(blank=True, null=True)),
                ('case_size', models.TextField(blank=True, null=True)),
                ('case_qty', models.TextField(blank=True, null=True)),
                ('run_date', models.TextField(blank=True, null=True)),
                ('id', models.TextField(primary_key=True, serialize=False)),
                ('gal_factor', models.TextField(blank=True, null=True)),
                ('line', models.TextField(blank=True, null=True)),
                ('gallonqty', models.TextField(blank=True, null=True)),
                ('num_blends', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'hx_blendthese',
            },
        ),
        migrations.CreateModel(
            name='LotNumRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_code', models.TextField(blank=True, null=True)),
                ('item_description', models.TextField(blank=True, null=True)),
                ('lot_number', models.TextField(unique=True)),
                ('lot_quantity', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True)),
                ('date_created', models.DateTimeField(verbose_name='date_created')),
                ('line', models.TextField(blank=True, null=True)),
                ('desk', models.TextField(blank=True, null=True)),
                ('sage_entered_date', models.DateTimeField(blank=True, null=True, verbose_name='run_date')),
                ('sage_qty_on_hand', models.DecimalField(blank=True, decimal_places=2, max_digits=100, null=True)),
                ('run_date', models.DateTimeField(blank=True, null=True, verbose_name='run_date')),
                ('run_day', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='StorageTank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tank_label_kpk', models.TextField()),
                ('tank_label_vega', models.TextField()),
                ('distance_A', models.DecimalField(decimal_places=5, max_digits=50)),
                ('distance_B', models.DecimalField(decimal_places=5, max_digits=50)),
                ('max_gallons', models.DecimalField(decimal_places=5, max_digits=50)),
                ('max_inches', models.DecimalField(decimal_places=5, max_digits=50)),
                ('gallons_per_inch', models.DecimalField(decimal_places=5, max_digits=50)),
                ('item_code', models.TextField()),
                ('item_description', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ChecklistLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('submitted_date', models.DateTimeField(auto_now_add=True)),
                ('operator_name', models.CharField(max_length=100, null=True)),
                ('serial_number', models.CharField(max_length=100)),
                ('engine_oil', models.CharField(max_length=5)),
                ('engine_oil_comments', models.TextField(blank=True)),
                ('propane_tank', models.CharField(max_length=5)),
                ('propane_tank_comments', models.TextField(blank=True)),
                ('radiator_leaks', models.CharField(max_length=5)),
                ('radiator_leaks_comments', models.TextField(blank=True)),
                ('tires', models.CharField(max_length=5)),
                ('tires_comments', models.TextField(blank=True)),
                ('mast_and_forks', models.CharField(max_length=5)),
                ('mast_and_forks_comments', models.TextField(blank=True)),
                ('leaks', models.CharField(max_length=5)),
                ('leaks_comments', models.TextField(blank=True)),
                ('horn', models.CharField(max_length=5)),
                ('horn_comments', models.TextField(blank=True)),
                ('driver_compartment', models.CharField(max_length=5)),
                ('driver_compartment_comments', models.TextField(blank=True)),
                ('seatbelt', models.CharField(max_length=5)),
                ('seatbelt_comments', models.TextField(blank=True)),
                ('battery', models.CharField(max_length=5)),
                ('battery_comments', models.TextField(blank=True)),
                ('safety_equipment', models.CharField(max_length=5)),
                ('safety_equipment_comments', models.TextField(blank=True)),
                ('steering', models.CharField(max_length=5)),
                ('steering_comments', models.TextField(blank=True)),
                ('brakes', models.CharField(max_length=5)),
                ('brakes_comments', models.TextField(blank=True)),
                ('forklift', models.ForeignKey(on_delete=models.SET('FORKLIFT DELETED'), to='core.forklift')),
            ],
        ),
    ]
