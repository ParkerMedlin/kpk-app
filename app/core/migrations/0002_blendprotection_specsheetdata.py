# Generated by Django 3.2.19 on 2023-07-12 11:05

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlendProtection',
            fields=[
                ('item_code', models.TextField(db_column='ItemCode', primary_key=True, serialize=False)),
                ('uv_protection', models.TextField(blank=True, db_column='UV  Protection', null=True)),
                ('freeze_protection', models.TextField(blank=True, db_column='Freeze Protection', null=True)),
            ],
            options={
                'db_table': 'blend_protection',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SpecsheetData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('itemcode', models.TextField(blank=True, db_column='ItemCode', null=True)),
                ('componentitemcode', models.TextField(blank=True, db_column='ComponentItemCode', null=True)),
                ('item_description', models.TextField(blank=True, db_column='Item Description', null=True)),
                ('appearance', models.TextField(blank=True, db_column='Appearance', null=True)),
                ('spec_gravity_weight_per_gallon_20c', models.TextField(blank=True, db_column='Spec. Gravity/Weight Per gallon 20C', null=True)),
                ('comments_cont_field', models.TextField(blank=True, db_column='Comments cont.', null=True)),
                ('ph', models.TextField(blank=True, db_column='pH', null=True)),
                ('viscosity', models.TextField(blank=True, db_column='Viscosity', null=True)),
                ('api_gravity', models.TextField(blank=True, db_column='API Gravity', null=True)),
                ('miscellaneous', models.TextField(blank=True, db_column='Miscellaneous', null=True)),
                ('freeze_point', models.TextField(blank=True, db_column='Freeze Point', null=True)),
                ('field_water', models.TextField(blank=True, db_column='% Water', null=True)),
                ('ir_scan_needed', models.TextField(blank=True, db_column='IR Scan Needed', null=True)),
                ('other_misc_testing', models.TextField(blank=True, db_column='Other Misc. Testing', null=True)),
                ('oil_blends', models.TextField(blank=True, db_column='Oil Blends', null=True)),
                ('comments', models.TextField(blank=True, db_column='Comments', null=True)),
                ('water_flush', models.TextField(blank=True, db_column='Water Flush', null=True)),
                ('solvent_flush', models.TextField(blank=True, db_column='Solvent Flush', null=True)),
                ('product_class', models.TextField(blank=True, db_column='Product Class', null=True)),
                ('soap_flush', models.TextField(blank=True, db_column='Soap Flush', null=True)),
                ('oil_flush', models.TextField(blank=True, db_column='Oil Flush', null=True)),
                ('polish_flush', models.TextField(blank=True, db_column='Polish Flush', null=True)),
                ('package_retain', models.TextField(blank=True, db_column='Package Retain', null=True)),
                ('blendnotes', models.TextField(blank=True, db_column='BlendNotes', null=True)),
                ('uv_protection', models.TextField(blank=True, db_column='UV  Protection', null=True)),
                ('freeze_protection', models.TextField(blank=True, db_column='Freeze Protection', null=True)),
                ('min_weight_n_field', models.TextField(blank=True, db_column='Min Weight (N)', null=True)),
                ('target_weight_n_field', models.TextField(blank=True, db_column='TARGET WEIGHT (N)', null=True)),
                ('max_weight_n_field', models.TextField(blank=True, db_column='Max Weight (N)', null=True)),
                ('new_upc', models.TextField(blank=True, db_column='New UPC', null=True)),
                ('scc', models.TextField(blank=True, db_column='SCC', null=True)),
                ('us_dot', models.TextField(blank=True, db_column='US - DOT', null=True)),
                ('special_notes', models.TextField(blank=True, db_column='Special Notes', null=True)),
                ('europe_haz', models.TextField(blank=True, db_column='Europe HAZ', null=True)),
                ('haz_symbols', models.TextField(blank=True, db_column='Haz Symbols', null=True)),
                ('current_footprint', models.TextField(blank=True, db_column='Current Footprint', null=True)),
                ('notes', models.TextField(blank=True, db_column='Notes', null=True)),
            ],
            options={
                'db_table': 'specsheet_data',
                'managed': False,
            },
        ),
    ]
